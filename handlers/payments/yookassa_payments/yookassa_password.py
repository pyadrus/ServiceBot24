import datetime  # –î–∞—Ç–∞
import json
import sqlite3

from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from loguru import logger  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é loguru
from yookassa import Configuration, Payment

from db.settings_db import checking_for_presence_in_the_user_database
from handlers.payments.products_goods_services import password_TelegramMaster
from keyboards.user_keyboards import start_menu_keyboard, payment_keyboard_password
from messages.messages import generate_payment_message
from system.dispatcher import bot, dp, ACCOUNT_ID, SECRET_KEY, ADMIN_CHAT_ID


def payment_yookassa_telegram_master():
    """–û–ø–ª–∞—Ç–∞ yookassa"""

    Configuration.account_id = ACCOUNT_ID
    Configuration.secret_key = SECRET_KEY

    description_text = "–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: –¢elegramMaster 2.0"  # –¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞

    payment = Payment.create(
        {"amount": {"value": password_TelegramMaster,  # –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–∞
                    "currency": "RUB"}, "capture": True,
         "confirmation": {"type": "redirect", "return_url": "https://t.me/h24service_bot"},
         "description": description_text,
         "metadata": {'order_number': '1'},
         "receipt": {"customer": {"email": "zh.vitaliy92@yandex.ru"},
                     "items": [
                         {
                             "description": description_text,  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                             "quantity": "1",
                             "amount": {"value": password_TelegramMaster,  # –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–∞
                                        "currency": "RUB"},  # –°—É–º–º–∞ –∏ –≤–∞–ª—é—Ç–∞
                             "vat_code": "1"}]}})

    payment_data = json.loads(payment.json())
    payment_id = payment_data['id']
    payment_url = (payment_data['confirmation'])['confirmation_url']
    logger.info(f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {payment_url}, ID –æ–ø–ª–∞—Ç—ã {payment_id}")
    return payment_url, payment_id


@dp.callback_query(F.data == "get_password")
async def get_password(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /get_password –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} {callback.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª / –∑–∞–ø—Ä–æ—Å–∏–ª–∞ –ø–∞—Ä–æ–ª—å '
                    f'–æ—Ç TelegramMaster 2.0')
        logger.info(callback.from_user.id)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await bot.get_chat_member(chat_id="@master_tg_d", user_id=callback.from_user.id)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        logger.info(f"User Status: {user.status}")
        if user.status in ['member', 'administrator', 'creator']:
            result = checking_for_presence_in_the_user_database(callback.from_user.id)
            if result:

                current_date = datetime.datetime.now().strftime("%Y-%m-%d")
                url, payment = payment_yookassa_telegram_master()
                payment_keyboard_key = payment_keyboard_password(url, payment)
                # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                payment_mes = generate_payment_message(current_date, password_TelegramMaster)
                await bot.send_message(callback.message.chat.id, payment_mes, reply_markup=payment_keyboard_key)

                await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                                   f"ID {callback.from_user.id},\n"
                                                                   f"Username: @{callback.from_user.username},\n"
                                                                   f"–ò–º—è: {callback.from_user.first_name},\n"
                                                                   f"–§–∞–º–∏–ª–∏—è: {callback.from_user.last_name},\n"
                                                                   f"–ó–∞–ø—Ä–æ—Å–∏–ª –ø–∞—Ä–æ–ª—å –æ—Ç TelegramMaster 2.0")
            else:
                text = (
                    "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ ü§ñ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª "
                    "üîó @master_tg_d –∏ –∫—É–ø–∏—Ç—å TelegramMaster 2.0.\n\n"

                    "–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—É—é —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é TelegramMaster 2.0 –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –Ω–æ–≤—ã–º–∏ "
                    "—Ñ—É–Ω–∫—Ü–∏—è–º–∏.\n\n"

                    "–ï—Å–ª–∏ –≤—ã —Ä–∞–Ω–µ–µ —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∏ TelegramMaster 2.0, –Ω–æ –±–æ—Ç ü§ñ –Ω–µ –≤—ã–¥–∞—ë—Ç –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ "
                    "üîó @PyAdminRU.")
                await bot.send_message(chat_id=callback.message.chat.id, text=text)  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                                   f"ID {callback.from_user.id},\n"
                                                                   f"Username: @{callback.from_user.username},\n"
                                                                   f"–ò–º—è: {callback.from_user.first_name},\n"
                                                                   f"–§–∞–º–∏–ª–∏—è: {callback.from_user.last_name},\n"
                                                                   f"–ó–∞–ø—Ä–æ—Å–∏–ª –ø–∞—Ä–æ–ª—å –æ—Ç TelegramMaster 2.0")
        else:
            text = ("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ ü§ñ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª "
                    "üîó @master_tg_d –∏ –∫—É–ø–∏—Ç—å TelegramMaster 2.0.\n\n"

                    "–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—É—é —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é TelegramMaster 2.0 –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –Ω–æ–≤—ã–º–∏ "
                    "—Ñ—É–Ω–∫—Ü–∏—è–º–∏.\n\n"

                    "–ï—Å–ª–∏ –≤—ã —Ä–∞–Ω–µ–µ —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∏ TelegramMaster 2.0, –Ω–æ –±–æ—Ç ü§ñ –Ω–µ –≤—ã–¥–∞—ë—Ç –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ "
                    "üîó @PyAdminRU.")
            await bot.send_message(chat_id=callback.message.chat.id, text=text)  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                               f"ID {callback.from_user.id},\n"
                                                               f"Username: @{callback.from_user.username},\n"
                                                               f"–ò–º—è: {callback.from_user.first_name},\n"
                                                               f"–§–∞–º–∏–ª–∏—è: {callback.from_user.last_name},\n"
                                                               f"–ó–∞–ø—Ä–æ—Å–∏–ª –ø–∞—Ä–æ–ª—å –æ—Ç TelegramMaster 2.0")
    except Exception as e:
        logger.exception(e)


@dp.callback_query(F.data.startswith("payment_pass"))
async def check_payments(callback_query: types.CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ '–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: –¢elegramMaster 2.0'"""
    split_data = callback_query.data.split("_")
    logger.info(split_data[2])
    payment_info = Payment.find_one(split_data[2])  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ —Å –ø–æ–º–æ—â—å—é API YooKassa
    logger.info(payment_info)
    product = "–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: –¢elegramMaster 2.0"
    if payment_info.status == "succeeded":  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        payment_status = "succeeded"
        date = payment_info.captured_at
        logger.info(date)
        conn = sqlite3.connect('setting/user_data.db')
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS users_pay (user_id, first_name, last_name, username, payment_info,
                                                                product, date, payment_status)''')
        cursor.execute('''INSERT INTO users_pay (user_id, first_name, last_name, username, payment_info, 
                                                      product, date, payment_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)''',
                       (callback_query.from_user.id,
                        callback_query.from_user.first_name,
                        callback_query.from_user.last_name,
                        callback_query.from_user.username, payment_info.id, product, date, payment_status))
        conn.commit()

        # –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        caption = (f"–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É {password_TelegramMaster} —Ä—É–± –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ‚ÄºÔ∏è \n\n"
                   f"–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É TelegramaMaster 2.0\n\n"
                   f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start")

        inline_keyboard_markup = start_menu_keyboard()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        document = FSInputFile("setting/password/TelegramMaster/password.txt")

        await bot.send_document(chat_id=callback_query.from_user.id, document=document, caption=caption,
                                reply_markup=inline_keyboard_markup)

        result = checking_for_presence_in_the_user_database(callback_query.from_user.id)

        if result is None:
            cursor.execute('INSERT INTO users (id) VALUES (?)', (callback_query.from_user.id,))
            conn.commit()

            await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                               f"ID {callback_query.from_user.id},\n"
                                                               f"Username: @{callback_query.from_user.username},\n"
                                                               f"–ò–º—è: {callback_query.from_user.first_name},\n"
                                                               f"–§–∞–º–∏–ª–∏—è: {callback_query.from_user.last_name},\n\n"
                                                               f"–ü—Ä–∏–æ–±—Ä–µ–ª –ø–∞—Ä–æ–ª—å –æ—Ç TelegramMaster 2.0")
    else:
        await bot.send_message(callback_query.message.chat.id, "Payment failed.")


def register_yookassa_password():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(get_password)
    dp.message.register(check_payments)
