# -*- coding: utf-8 -*-

from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from loguru import logger  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é loguru
from yookassa import Payment

from db.settings_db import save_payment_info, add_user_if_not_exists, is_user_in_db
from handlers.payment_yookassa import payment_yookassa_com
from handlers.payments.products_goods_services import TelegramMaster
from keyboards.user_keyboards import start_menu
from messages.messages import message_payment, message_check_payment
from system.dispatcher import bot, dp, ADMIN_CHAT_ID

# –û–ø–ª–∞—Ç–∞ TelegramMaster 2.0

product = "TelegramMaster 2.0"


@dp.callback_query(F.data.startswith("payment_yookassa_program"))
async def payment_url_handler(callback_query: types.CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã TelegramMaster 2.0"""
    payment_url, payment_id = payment_yookassa_com(
        description_text=f"–û–ø–ª–∞—Ç–∞: {product}",  # –¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        product_price=TelegramMaster  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö
    )
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É (–Æ–∫–∞—Å—Å–∞)', callback_data=f"checsk_payment_{payment_id}")],
        [InlineKeyboardButton(text='üè† –í –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é', callback_data='start_menu_keyboard')],
    ])
    await bot.send_message(chat_id=callback_query.from_user.id,
                           text=message_payment(product, payment_url),
                           reply_markup=keyboard, parse_mode="HTML")


@dp.callback_query(F.data.startswith("checsk_payment"))
async def check_payment(callback_query: types.CallbackQuery, state: FSMContext):
    """"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ TelegramMaster 2.0"""
    split_data = callback_query.data.split("_")
    logger.info(split_data[2])
    payment_info = Payment.find_one(split_data[2])  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ —Å –ø–æ–º–æ—â—å—é API yookassa
    logger.info(payment_info)
    if payment_info.status == "succeeded":  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–ª–∞—Ç–∏–ª —Å—á–µ—Ç –≤ —Ä—É–±–ª—è—Ö
        save_payment_info(callback_query.from_user.id, callback_query.from_user.first_name,
                          callback_query.from_user.last_name, callback_query.from_user.username, payment_info.id,
                          product, payment_info.captured_at, "succeeded")
        # –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        await bot.send_document(
            chat_id=callback_query.from_user.id,
            document=FSInputFile("setting/password/TelegramMaster/password.txt"),
            caption=message_check_payment(product_price=TelegramMaster, product=product),
            reply_markup=start_menu()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        )
        result = is_user_in_db(callback_query.from_user.id)
        if result is None:
            add_user_if_not_exists(callback_query.from_user.id)
            await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                               f"ID {callback_query.from_user.id},\n"
                                                               f"Username: @{callback_query.from_user.username},\n"
                                                               f"–ò–º—è: {callback_query.from_user.first_name},\n"
                                                               f"–§–∞–º–∏–ª–∏—è: {callback_query.from_user.last_name},\n\n"
                                                               f"–ü—Ä–∏–æ–±—Ä–µ–ª TelegramMaster 2.0")
    else:
        await bot.send_message(callback_query.message.chat.id, "Payment failed.")


def register_yookassa_program():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    # –û–ø–ª–∞—Ç–∞ TelegramMaster
    dp.message.register(check_payment)
    dp.callback_query.register(payment_url_handler)
