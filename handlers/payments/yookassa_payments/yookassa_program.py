import json
import sqlite3

from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from loguru import logger  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é loguru
from yookassa import Configuration, Payment
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db.settings_db import checking_for_presence_in_the_user_database
from handlers.payments.products_goods_services import TelegramMaster
from keyboards.user_keyboards import start_menu
from system.dispatcher import bot, dp, ACCOUNT_ID, SECRET_KEY, ADMIN_CHAT_ID


def payment_yookassa():
    """–û–ø–ª–∞—Ç–∞ yookassa"""

    Configuration.account_id = ACCOUNT_ID
    Configuration.secret_key = SECRET_KEY

    description_text = "–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã: TelegramMaster 2.0"  # –¢–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞

    payment = Payment.create(
        {"amount": {"value": TelegramMaster,  # –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ TelegramMaster 2.0
                    "currency": "RUB"}, "capture": True,
         "confirmation": {"type": "redirect", "return_url": "https://t.me/h24service_bot"},
         "description": description_text,
         "metadata": {'order_number': '1'},
         "receipt": {"customer": {"email": "zh.vitaliy92@yandex.ru"},
                     "items": [
                         {
                             "description": description_text,  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                             "quantity": "1",
                             "amount": {"value": TelegramMaster,  # –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ TelegramMaster 2.0
                                        "currency": "RUB"},  # –°—É–º–º–∞ –∏ –≤–∞–ª—é—Ç–∞
                             "vat_code": "1"}]}})

    payment_data = json.loads(payment.json())
    payment_id = payment_data['id']
    payment_url = (payment_data['confirmation'])['confirmation_url']
    logger.info(f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {payment_url}, ID –æ–ø–ª–∞—Ç—ã {payment_id}")
    return payment_url, payment_id


@dp.callback_query(F.data.startswith("payment_yookassa_program"))
async def payment_url_handler(callback_query: types.CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã TelegramMaster 2.0"""
    payment_url, payment_id = payment_yookassa()

    messages = (
        "üí≥ <b>–û–ø–ª–∞—Ç–∞ TelegramMaster 2.0</b>\n\n"
        f"–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: {payment_url}\n\n"
        "üîî <b>–í–∞–∂–Ω–æ:</b>\n"
        "1. –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ <b>9 –º–∏–Ω—É—Ç</b>. –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ, –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç–æ –º–µ–Ω—é –∑–∞–Ω–æ–≤–æ.\n"
        "2. –û–ø–ª–∞—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É <b>–Æ–∫–∞—Å—Å–∞</b>.\n"
        "3. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç –∞—Ä—Ö–∏–≤–∞ —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π. –ê—Ä—Ö–∏–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ https://t.me/+uE6L_wey4c43YWEy.\n\n"
        "üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É¬ª</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ."
    )

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É (–Æ–∫–∞—Å—Å–∞)', callback_data=f"check_payment_{payment_id}")],
        [InlineKeyboardButton(text='üè† –í –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é', callback_data='start_menu_keyboard')],
    ])

    await bot.send_message(chat_id=callback_query.from_user.id, text=messages, reply_markup=keyboard, parse_mode="HTML")


@dp.callback_query(F.data.startswith("check_payment"))
async def check_payment(callback_query: types.CallbackQuery, state: FSMContext):
    """"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ TelegramMaster 2.0"""
    split_data = callback_query.data.split("_")
    logger.info(split_data[2])
    payment_info = Payment.find_one(split_data[2])  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ —Å –ø–æ–º–æ—â—å—é API yookassa
    logger.info(payment_info)
    product = "TelegramMaster 2.0"
    if payment_info.status == "succeeded":  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        payment_status = "succeeded"
        date = payment_info.captured_at
        logger.info(date)
        conn = sqlite3.connect('setting/user_data.db')
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS users_pay (user_id, first_name, last_name, username, payment_info,
                                                                product, date, payment_status)''')
        cursor.execute('''INSERT INTO users_pay (user_id, first_name, last_name, username, payment_info, 
                                                      product, date, payment_status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)''',
                       (callback_query.from_user.id,
                        callback_query.from_user.first_name,
                        callback_query.from_user.last_name,
                        callback_query.from_user.username, payment_info.id, product, date, payment_status))
        conn.commit()

        # –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        caption = (f"–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É {TelegramMaster} —Ä—É–± –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ‚ÄºÔ∏è \n\n"
                   f"–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É {product}\n\n"
                   f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start")

        inline_keyboard_markup = start_menu()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        document = FSInputFile("setting/password/TelegramMaster/password.txt")

        await bot.send_document(chat_id=callback_query.from_user.id, document=document, caption=caption,
                                reply_markup=inline_keyboard_markup)

        result = checking_for_presence_in_the_user_database(callback_query.from_user.id)

        if result is None:
            cursor.execute('INSERT INTO users (id) VALUES (?)', (callback_query.from_user.id,))
            conn.commit()

            await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n"
                                                               f"ID {callback_query.from_user.id},\n"
                                                               f"Username: @{callback_query.from_user.username},\n"
                                                               f"–ò–º—è: {callback_query.from_user.first_name},\n"
                                                               f"–§–∞–º–∏–ª–∏—è: {callback_query.from_user.last_name},\n\n"
                                                               f"–ü—Ä–∏–æ–±—Ä–µ–ª TelegramMaster 2.0")
    else:
        await bot.send_message(callback_query.message.chat.id, "Payment failed.")


def register_yookassa_program():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(check_payment)
    dp.callback_query.register(payment_url_handler)
